[project]
name = "cookiecutter-fastapi-users"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
# requires-python = ">3.13, <4.0"

dependencies = [
    "fastapi[standard]>=0.115.12",
    "logfire>=3.14.1",
    "asyncpg>=0.30.0",
    "sqlalchemy>=2.0.40",
    "granian>=2.2.2",
    "sqlalchemy-utils>=0.41.2",
    "pydantic-settings>=2.9.1",
    "loguru>=0.7.3",
    "loguru-mypy>=0.0.4",
]

[dependency-groups]
dev = [
    "coverage>=7.8.0",
    "icecream>=2.1.4",
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.11.4",
]

[tool.pytest.ini_options]
source = ["src", "tests"]
asyncio_mode = "auto"
addopts = "-vv --cache-clear -rA -p no:cacheprovider"
python_files = "test_*.py"
log_level = "DEBUG"
testpaths = ["tests"]
python_functions = "test_*"

[tool.coverage.run]
branch = true
source = ["."]
omit = ["*/__init__.py", "**/.env/**", "deploy/*"]
relative_files = true


[tool.coverage.report]
exclude_also = ["if __name__ == .__main__.:"]
omit = ["*/__init__.py", "**/.env/**", "deploy/*"]
include = ["src/*", "tests/*"]


[tool.coverage.html]
title = "users Coverage"
directory = "tests/coverage/report-html"

[tool.coverage.xml]
output = "reports/coverage/coverage.xml"


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 88
indent-width = 4
src = ["src"]
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
    "F811", # Redefinition of unused function pytest
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]


[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80
indent-style = "tab"
quote-style = "double"

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.mypy]
python_version = "3.13"
# python_version = "3.13"

strict = true
plugins = ["pydantic.mypy"]
disallow_subclassing_any = false
files = ["src"]
ignore_missing_imports = true
warn_unused_ignores = false


[[tool.mypy.overrides]]
module = ["src.*"]
warn_unused_ignores = false
ignore_missing_imports = true
